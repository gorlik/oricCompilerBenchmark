SYMBOLS
{
    _start      : type = weak, value = $0800; # can be overloaded -D_start=xxxx
    __stack     : type = weak, value = $8000;
    __stacksize : type = weak, value = $0400;
    __zpstart   : type = weak, value = $0000;
    __zpend     : type = weak, value = $0100;
}

MEMORY
{
    ZP:   file = "", define = yes, start = __zpstart,     size = __zpend - __zpstart;
    MAIN: file = %O, define = yes, start = _start, size = __stack - __stacksize - _start;
}

SEGMENTS
{
    ZEROPAGE: load = ZP,   type = zp;
    STARTUP:  load = MAIN, type = ro,  optional = yes;
    LOWCODE:  load = MAIN, type = ro,  optional = yes;
    ONCE:     load = MAIN, type = ro,  optional = yes;
    CODE:     load = MAIN, type = rw,  optional = yes;
    RODATA:   load = MAIN, type = rw,  optional = yes;
    DATA:     load = MAIN, type = rw,  optional = yes;
    BSS:      load = MAIN, type = bss, define   = yes;
}

FEATURES
{
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
